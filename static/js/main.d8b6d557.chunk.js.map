{"version":3,"sources":["components/Header.js","components/Story.js","utils/constants.js","utils/apis.js","hooks/dataFetcher.js","components/Loader.js","components/ShowStories.js","components/PageNotFound.js","router/AppRouter.js","index.js"],"names":["Header","Fragment","className","to","activeClassName","Link","url","title","href","target","rel","Story","story","id","by","kids","time","Date","toLocaleDateString","hour","minute","length","BASE_API_URL","getStory","a","axios","get","console","log","getStories","type","storyIds","data","Promise","all","slice","map","stories","useDataFetcher","useState","setStories","isLoading","setisLoading","useEffect","then","catch","Loader","props","document","createElement","node","loader","querySelector","appendChild","classList","add","show","remove","body","ReactDOM","createPortal","children","ShowStories","PageNotFound","AppRouter","path","render","exact","match","params","includes","component","getElementById"],"mappings":"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","file":"static/js/main.d8b6d557.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Header = () => {\n    return (\n        <React.Fragment>\n            <h1>Hacker News Clone</h1>\n            <div className=\"nav-link\">\n                <NavLink to=\"/top\" activeClassName=\"active\">\n                    Top Stories\n                </NavLink>\n                <NavLink to=\"/new\" activeClassName=\"active\">\n                    Latest Stories\n                </NavLink>\n                <NavLink to=\"/best\" activeClassName=\"active\">\n                    Best Stories\n                </NavLink>\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport default Header;","import React from \"react\";\n\nconst Link = ({ url, title }) => (\n    <a href={url} target=\"_blank\" rel=\"noreferrer\">\n        {title}\n    </a>\n);\n\nconst Story = ({ story: { id, by, title, kids, time, url } }) => {\n    return (\n        <div className=\"story\">\n            <div className=\"story-title\">\n                <Link url={url} title={title} />\n            </div>\n            <div className=\"story-info\">\n                <span>\n                    by{' '}\n                    <Link url={`https://news.ycombinator.com/user?id=${by}`} title={by} />\n                </span>\n                |<span>\n                    {new Date(time * 1000).toLocaleDateString('en-US', {\n                        hour: 'numeric',\n                        minute: 'numeric'\n                    })}\n                </span>|\n                <span>\n                    <Link\n                        url={`https://news.ycombinator.com/item?id=${id}`}\n                        title={`${kids && kids.length > 0 ? kids.length : 0} comments`}\n                    />\n                </span>\n            </div>\n        </div>\n    );\n};\n\nexport default Story;","export const BASE_API_URL = 'https://hacker-news.firebaseio.com/v0';","import axios from 'axios';\nimport { BASE_API_URL } from './constants';\n\nconst getStory = async (id) => {\n    try {\n        const story = await axios.get(`${BASE_API_URL}/item/${id}.json`);\n    return story;\n    } catch (error) {\n        console.log('Error while getting a story.');\n    }\n};\n\nexport const getStories = async (type) => {\n    try {\n        const { data: storyIds } = await axios.get(\n            `${BASE_API_URL}/${type}stories.json`\n        );\n        const stories = await Promise.all(storyIds.slice(0, 30).map(getStory));\n    return stories;\n    } catch (error) {\n        console.log('Error while getting list of stories.');\n    }\n};","import { useState, useEffect } from 'react';\nimport { getStories } from '../utils/apis';\n\nconst useDataFetcher = (type) => {\n    const [stories, setStories] = useState([]);\n    const [isLoading, setisLoading] = useState(false);\n\n    useEffect(() => {\n        setisLoading(true);\n        getStories(type)\n            .then((stories) => {\n                setStories(stories);\n                setisLoading(false);\n            })\n            .catch(() => {\n                setisLoading(false);\n            });\n    }, [type]);\n\n    return { isLoading, stories };\n};\n\nexport default useDataFetcher;","import { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Loader = (props) => {\n    const [node] = useState(document.createElement('div'));\n    const loader = document.querySelector('#loader');\n\n    useEffect(() => {\n        loader.appendChild(node).classList.add('message');\n    }, [loader, node]);\n\n    useEffect(() => {\n        if (props.show) {\n        loader.classList.remove('hide');\n        document.body.classList.add('loader-open');\n        } else {\n        loader.classList.add('hide');\n        document.body.classList.remove('loader-open');\n        }\n    }, [loader, props.show]);\n\n    return ReactDOM.createPortal(props.children, node);\n};\n\nexport default Loader;","import React from 'react';\nimport Story from './Story';\nimport useDataFetcher from '../hooks/dataFetcher';\nimport Loader from './Loader';\n\nconst ShowStories = ({ type }) => {\n    const { isLoading, stories } = useDataFetcher(type ? type : 'top');\n\n    return (\n        <React.Fragment>\n        <Loader show={isLoading}>Loading...</Loader>\n        <React.Fragment>\n            {stories.map(({ data: story }) => (\n            <Story key={story.id} story={story} />\n            ))}\n        </React.Fragment>\n        </React.Fragment>\n    );\n};\n\nexport default ShowStories;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst PageNotFound = () => {\n    return (\n        <p>\n            Page Not found. Go to <Link to=\"/\">Home</Link>\n        </p>\n    );\n};\n\nexport default PageNotFound;","import React from 'react';\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\nimport Header from '../components/Header';\nimport ShowStories from '../components/ShowStories';\nimport PageNotFound from '../components/PageNotFound';\n\nconst AppRouter = () => {\n    return (\n        <BrowserRouter>\n            <div className=\"container\">\n            <Header />\n            <Switch>\n                <Route path=\"/\" render={() => <Redirect to=\"/top\" />} exact={true} />\n                <Route\n                path=\"/:type\"\n                render={({ match }) => {\n                    const { type } = match.params;\n                    if (!['top', 'new', 'best'].includes(type)) {\n                    return <Redirect to=\"/\" />;\n                    }\n                    return <ShowStories type={type} />;\n                }}\n                />\n                <Route component={PageNotFound} />\n            </Switch>\n            </div>\n        </BrowserRouter>\n    );\n};\n\nexport default AppRouter;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AppRouter from './router/AppRouter';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles.scss';\n\nReactDOM.render(\n  <AppRouter />,\n  document.getElementById('root')\n);"],"sourceRoot":""}